package molecule.datomic.base.marshalling

import java.util.{Collection => jCollection, List => jList}
import molecule.core.marshalling.attrIndexes._
import molecule.datomic.base.marshalling.flat.PackAttrs

case class Flat2packed(
  indexes: Indexes,
  rows: jCollection[jList[AnyRef]],
  maxRows: Int
) extends PackAttrs {

  def getPacked: String = {
    if (!rows.isEmpty) {
      val packRow: jList[_] => Unit = packRef(indexes.attrs, 0)
      val rowIterator                        = rows.iterator()
      var i                         = 0
      while (rowIterator.hasNext && i != maxRows) {
        packRow(rowIterator.next)
        i += 1
      }
    }
    sb.substring(1)
    sb.toString
  }

  private var colIndex = -1

  def packNode(node: IndexNode, level: Int): jList[_] => Unit = {
    node match {
      case AttrIndex(_, castIndex, _, _, _) =>
        colIndex += 1
        packAttr(castIndex, colIndex)

      case Indexes(_, _, attrs) =>
        packRef(attrs, level)
    }
  }

  def packRef(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    attrs.size match {
      case 1  => packRef1(attrs, level)
      case 2  => packRef2(attrs, level)
      case 3  => packRef3(attrs, level)
      case 4  => packRef4(attrs, level)
      case 5  => packRef5(attrs, level)
      case 6  => packRef6(attrs, level)
      case 7  => packRef7(attrs, level)
      case 8  => packRef8(attrs, level)
      case 9  => packRef9(attrs, level)
      case 10 => packRef10(attrs, level)
      case 11 => packRef11(attrs, level)
      case 12 => packRef12(attrs, level)
      case 13 => packRef13(attrs, level)
      case 14 => packRef14(attrs, level)
      case 15 => packRef15(attrs, level)
      case 16 => packRef16(attrs, level)
      case 17 => packRef17(attrs, level)
      case 18 => packRef18(attrs, level)
      case 19 => packRef19(attrs, level)
      case 20 => packRef20(attrs, level)
      case 21 => packRef21(attrs, level)
      case 22 => packRef22(attrs, level)
    }
  }

  def packRef1(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    (row: jList[_]) =>
      pack0(row)
  }

  def packRef2(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
  }

  def packRef3(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
  }

  def packRef4(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
  }

  def packRef5(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    val pack4 = packNode(attrs(4), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
  }

  def packRef6(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    val pack4 = packNode(attrs(4), level)
    val pack5 = packNode(attrs(5), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
  }

  def packRef7(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    val pack4 = packNode(attrs(4), level)
    val pack5 = packNode(attrs(5), level)
    val pack6 = packNode(attrs(6), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
  }

  def packRef8(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    val pack4 = packNode(attrs(4), level)
    val pack5 = packNode(attrs(5), level)
    val pack6 = packNode(attrs(6), level)
    val pack7 = packNode(attrs(7), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
  }

  def packRef9(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    val pack4 = packNode(attrs(4), level)
    val pack5 = packNode(attrs(5), level)
    val pack6 = packNode(attrs(6), level)
    val pack7 = packNode(attrs(7), level)
    val pack8 = packNode(attrs(8), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
  }

  def packRef10(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0 = packNode(attrs.head, level)
    val pack1 = packNode(attrs(1), level)
    val pack2 = packNode(attrs(2), level)
    val pack3 = packNode(attrs(3), level)
    val pack4 = packNode(attrs(4), level)
    val pack5 = packNode(attrs(5), level)
    val pack6 = packNode(attrs(6), level)
    val pack7 = packNode(attrs(7), level)
    val pack8 = packNode(attrs(8), level)
    val pack9 = packNode(attrs(9), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
  }

  def packRef11(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
  }

  def packRef12(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
  }

  def packRef13(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
  }

  def packRef14(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
  }

  def packRef15(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
  }

  def packRef16(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
  }

  def packRef17(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    val pack16 = packNode(attrs(16), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
      pack16(row)
  }

  def packRef18(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    val pack16 = packNode(attrs(16), level)
    val pack17 = packNode(attrs(17), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
      pack16(row)
      pack17(row)
  }

  def packRef19(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    val pack16 = packNode(attrs(16), level)
    val pack17 = packNode(attrs(17), level)
    val pack18 = packNode(attrs(18), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
      pack16(row)
      pack17(row)
      pack18(row)
  }

  def packRef20(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    val pack16 = packNode(attrs(16), level)
    val pack17 = packNode(attrs(17), level)
    val pack18 = packNode(attrs(18), level)
    val pack19 = packNode(attrs(19), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
      pack16(row)
      pack17(row)
      pack18(row)
      pack19(row)
  }

  def packRef21(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    val pack16 = packNode(attrs(16), level)
    val pack17 = packNode(attrs(17), level)
    val pack18 = packNode(attrs(18), level)
    val pack19 = packNode(attrs(19), level)
    val pack20 = packNode(attrs(20), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
      pack16(row)
      pack17(row)
      pack18(row)
      pack19(row)
      pack20(row)
  }

  def packRef22(attrs: List[IndexNode], level: Int): jList[_] => Unit = {
    val pack0  = packNode(attrs.head, level)
    val pack1  = packNode(attrs(1), level)
    val pack2  = packNode(attrs(2), level)
    val pack3  = packNode(attrs(3), level)
    val pack4  = packNode(attrs(4), level)
    val pack5  = packNode(attrs(5), level)
    val pack6  = packNode(attrs(6), level)
    val pack7  = packNode(attrs(7), level)
    val pack8  = packNode(attrs(8), level)
    val pack9  = packNode(attrs(9), level)
    val pack10 = packNode(attrs(10), level)
    val pack11 = packNode(attrs(11), level)
    val pack12 = packNode(attrs(12), level)
    val pack13 = packNode(attrs(13), level)
    val pack14 = packNode(attrs(14), level)
    val pack15 = packNode(attrs(15), level)
    val pack16 = packNode(attrs(16), level)
    val pack17 = packNode(attrs(17), level)
    val pack18 = packNode(attrs(18), level)
    val pack19 = packNode(attrs(19), level)
    val pack20 = packNode(attrs(20), level)
    val pack21 = packNode(attrs(21), level)
    (row: jList[_]) =>
      pack0(row)
      pack1(row)
      pack2(row)
      pack3(row)
      pack4(row)
      pack5(row)
      pack6(row)
      pack7(row)
      pack8(row)
      pack9(row)
      pack10(row)
      pack11(row)
      pack12(row)
      pack13(row)
      pack14(row)
      pack15(row)
      pack16(row)
      pack17(row)
      pack18(row)
      pack19(row)
      pack20(row)
      pack21(row)
  }
}
